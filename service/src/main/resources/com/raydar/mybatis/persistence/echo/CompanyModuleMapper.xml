<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.raydar.mybatis.persistence.echo.CompanyModuleMapper">

	<insert id="create" parameterType="CompanyModule" useGeneratedKeys="true" keyProperty="companyModuleID" >

		INSERT INTO `echo_company_module`
		(
			`companyID`,
			`shortName`,
			`moduleID`,
			`updatedOn`,
			`updatedBy`,
			`createdOn`,
			`createdBy`
		)
		VALUES
		(
			#{companyID},
			#{shortName},
			#{moduleID},
			#{updatedOn},
			#{updatedBy},
			#{createdOn},
			#{createdBy}
		)


	</insert>
	
	<update id="update" parameterType="CompanyModule">
		UPDATE echo_company_module SET
			companyID = #{companyID},
			shortName = #{shortName},
			moduleID = #{moduleID} ,
			`updatedOn` = #{updatedOn},
			`updatedBy` = #{updatedBy}
		WHERE companyModuleID = #{companyModuleID}
	</update>

	<select id="getByID" parameterType="int" resultType="CompanyModule">
		SELECT ecm.companyModuleID, ecm.companyID, ecm.shortName, ecm.moduleID, ecm.updatedOn, ecm.updatedBy, ecm.`createdOn`, ecm.`createdBy`, ec.companyName AS companyName, em.moduleName AS moduleName
		FROM echo_company_module ecm
		JOIN echo_company ec ON ecm.companyID = ec.companyID
		JOIN echo_module em ON ecm.moduleID = em.moduleID
		WHERE companyModuleID = #{companyModuleID}
	</select>

	<select id="getByParam" parameterType="map" resultType="CompanyModule">
		SELECT ecm.companyModuleID, ecm.companyID, ecm.moduleID, ecm.shortName, ecm.updatedOn, ecm.updatedBy, ecm.`createdOn`, ecm.`createdBy`, ec.companyName AS companyName, em.moduleName AS moduleName
		FROM echo_company_module ecm
		JOIN echo_company ec ON ecm.companyID = ec.companyID
		JOIN echo_module em ON ecm.moduleID = em.moduleID
		WHERE 1 = 1
		<if test="companyModuleID != null">
			AND ecm.companyModuleID = #{companyModuleID}
		</if>
		<if test="companyID != null">
			AND ecm.companyID = #{companyID}
		</if>
		<if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
			ORDER BY ${sortColumn} ${sortOrder}
			LIMIT #{limit} OFFSET #{offset}
		</if>
	</select>

    <delete id="delete" parameterType="map">
		DELETE  FROM echo_module WHERE moduleID = #{moduleID}
	</delete>


</mapper>